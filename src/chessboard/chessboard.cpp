#include "chessboard.h"

namespace ChessboardInternal {
    float g_vertices[] = {
            1.0f, -1.0f, -1.0f, 1.0f,
            -1.0f, 1.0f, -1.0f, 1.0f,
            -1.0f, -1.0f, -1.0f, 1.0f,

            1.0f, -1.0f, -1.0f, 1.0f,
            1.0f, 1.0f, -1.0f, 1.0f,
            -1.0f, 1.0f, -1.0f, 1.0f,


            -1.0f, -1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, 1.0f, 1.0f,
            1.0f, -1.0f, 1.0f, 1.0f,

            -1.0f, -1.0f, 1.0f, 1.0f,
            -1.0f, 1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, 1.0f, 1.0f,

            1.0f, -1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, -1.0f, 1.0f,
            1.0f, -1.0f, -1.0f, 1.0f,

            1.0f, -1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, -1.0f, 1.0f,

            -1.0f, -1.0f, -1.0f, 1.0f,
            -1.0f, 1.0f, 1.0f, 1.0f,
            -1.0f, -1.0f, 1.0f, 1.0f,

            -1.0f, -1.0f, -1.0f, 1.0f,
            -1.0f, 1.0f, -1.0f, 1.0f,
            -1.0f, 1.0f, 1.0f, 1.0f,

            -1.0f, -1.0f, -1.0f, 1.0f,
            1.0f, -1.0f, 1.0f, 1.0f,
            1.0f, -1.0f, -1.0f, 1.0f,

            -1.0f, -1.0f, -1.0f, 1.0f,
            -1.0f, -1.0f, 1.0f, 1.0f,
            1.0f, -1.0f, 1.0f, 1.0f,

            -1.0f, 1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, -1.0f, 1.0f,
            1.0f, 1.0f, 1.0f, 1.0f,

            -1.0f, 1.0f, 1.0f, 1.0f,
            -1.0f, 1.0f, -1.0f, 1.0f,
            1.0f, 1.0f, -1.0f, 1.0f,

    };

    float g_colors[] = {
            1.0f, 0.0f, 0.0f, 1.0f,
            1.0f, 0.0f, 0.0f, 1.0f,
            1.0f, 0.0f, 0.0f, 1.0f,

            1.0f, 0.0f, 0.0f, 1.0f,
            1.0f, 0.0f, 0.0f, 1.0f,
            1.0f, 0.0f, 0.0f, 1.0f,

            0.0f, 1.0f, 0.0f, 1.0f,
            0.0f, 1.0f, 0.0f, 1.0f,
            0.0f, 1.0f, 0.0f, 1.0f,

            0.0f, 1.0f, 0.0f, 1.0f,
            0.0f, 1.0f, 0.0f, 1.0f,
            0.0f, 1.0f, 0.0f, 1.0f,

            0.0f, 0.0f, 1.0f, 1.0f,
            0.0f, 0.0f, 1.0f, 1.0f,
            0.0f, 0.0f, 1.0f, 1.0f,

            0.0f, 0.0f, 1.0f, 1.0f,
            0.0f, 0.0f, 1.0f, 1.0f,
            0.0f, 0.0f, 1.0f, 1.0f,

            1.0f, 1.0f, 0.0f, 1.0f,
            1.0f, 1.0f, 0.0f, 1.0f,
            1.0f, 1.0f, 0.0f, 1.0f,

            1.0f, 1.0f, 0.0f, 1.0f,
            1.0f, 1.0f, 0.0f, 1.0f,
            1.0f, 1.0f, 0.0f, 1.0f,

            0.0f, 1.0f, 1.0f, 1.0f,
            0.0f, 1.0f, 1.0f, 1.0f,
            0.0f, 1.0f, 1.0f, 1.0f,

            0.0f, 1.0f, 1.0f, 1.0f,
            0.0f, 1.0f, 1.0f, 1.0f,
            0.0f, 1.0f, 1.0f, 1.0f,

            1.0f, 1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, 1.0f, 1.0f,

            1.0f, 1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, 1.0f, 1.0f,
            1.0f, 1.0f, 1.0f, 1.0f,
    };

    float g_normals[] = {
            0.0f, 0.0f, -1.0f, 0.0f,
            0.0f, 0.0f, -1.0f, 0.0f,
            0.0f, 0.0f, -1.0f, 0.0f,

            0.0f, 0.0f, -1.0f, 0.0f,
            0.0f, 0.0f, -1.0f, 0.0f,
            0.0f, 0.0f, -1.0f, 0.0f,

            0.0f, 0.0f, 1.0f, 0.0f,
            0.0f, 0.0f, 1.0f, 0.0f,
            0.0f, 0.0f, 1.0f, 0.0f,

            0.0f, 0.0f, 1.0f, 0.0f,
            0.0f, 0.0f, 1.0f, 0.0f,
            0.0f, 0.0f, 1.0f, 0.0f,

            1.0f, 0.0f, 0.0f, 0.0f,
            1.0f, 0.0f, 0.0f, 0.0f,
            1.0f, 0.0f, 0.0f, 0.0f,

            1.0f, 0.0f, 0.0f, 0.0f,
            1.0f, 0.0f, 0.0f, 0.0f,
            1.0f, 0.0f, 0.0f, 0.0f,

            -1.0f, 0.0f, 0.0f, 0.0f,
            -1.0f, 0.0f, 0.0f, 0.0f,
            -1.0f, 0.0f, 0.0f, 0.0f,

            -1.0f, 0.0f, 0.0f, 0.0f,
            -1.0f, 0.0f, 0.0f, 0.0f,
            -1.0f, 0.0f, 0.0f, 0.0f,

            0.0f, -1.0f, 0.0f, 0.0f,
            0.0f, -1.0f, 0.0f, 0.0f,
            0.0f, -1.0f, 0.0f, 0.0f,

            0.0f, -1.0f, 0.0f, 0.0f,
            0.0f, -1.0f, 0.0f, 0.0f,
            0.0f, -1.0f, 0.0f, 0.0f,

            0.0f, 1.0f, 0.0f, 0.0f,
            0.0f, 1.0f, 0.0f, 0.0f,
            0.0f, 1.0f, 0.0f, 0.0f,

            0.0f, 1.0f, 0.0f, 0.0f,
            0.0f, 1.0f, 0.0f, 0.0f,
            0.0f, 1.0f, 0.0f, 0.0f,
    };

    float g_vertexNormals[] = {
            1.0f, -1.0f, -1.0f, 0.0f,
            -1.0f, 1.0f, -1.0f, 0.0f,
            -1.0f, -1.0f, -1.0f, 0.0f,

            1.0f, -1.0f, -1.0f, 0.0f,
            1.0f, 1.0f, -1.0f, 0.0f,
            -1.0f, 1.0f, -1.0f, 0.0f,


            -1.0f, -1.0f, 1.0f, 0.0f,
            1.0f, 1.0f, 1.0f, 0.0f,
            1.0f, -1.0f, 1.0f, 0.0f,

            -1.0f, -1.0f, 1.0f, 0.0f,
            -1.0f, 1.0f, 1.0f, 0.0f,
            1.0f, 1.0f, 1.0f, 0.0f,

            1.0f, -1.0f, 1.0f, 0.0f,
            1.0f, 1.0f, -1.0f, 0.0f,
            1.0f, -1.0f, -1.0f, 0.0f,

            1.0f, -1.0f, 1.0f, 0.0f,
            1.0f, 1.0f, 1.0f, 0.0f,
            1.0f, 1.0f, -1.0f, 0.0f,

            -1.0f, -1.0f, -1.0f, 0.0f,
            -1.0f, 1.0f, 1.0f, 0.0f,
            -1.0f, -1.0f, 1.0f, 0.0f,

            -1.0f, -1.0f, -1.0f, 0.0f,
            -1.0f, 1.0f, -1.0f, 0.0f,
            -1.0f, 1.0f, 1.0f, 0.0f,

            -1.0f, -1.0f, -1.0f, 0.0f,
            1.0f, -1.0f, 1.0f, 0.0f,
            1.0f, -1.0f, -1.0f, 0.0f,

            -1.0f, -1.0f, -1.0f, 0.0f,
            -1.0f, -1.0f, 1.0f, 0.0f,
            1.0f, -1.0f, 1.0f, 0.0f,

            -1.0f, 1.0f, 1.0f, 0.0f,
            1.0f, 1.0f, -1.0f, 0.0f,
            1.0f, 1.0f, 1.0f, 0.0f,

            -1.0f, 1.0f, 1.0f, 0.0f,
            -1.0f, 1.0f, -1.0f, 0.0f,
            1.0f, 1.0f, -1.0f, 0.0f,
    };

    float g_texCoords[] = {
            1.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f,
            1.0f, 1.0f, 1.0f, 0.0f, 0.0f, 0.0f,

            1.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f,
            1.0f, 1.0f, 1.0f, 0.0f, 0.0f, 0.0f,

            1.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f,
            1.0f, 1.0f, 1.0f, 0.0f, 0.0f, 0.0f,

            1.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f,
            1.0f, 1.0f, 1.0f, 0.0f, 0.0f, 0.0f,

            1.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f,
            1.0f, 1.0f, 1.0f, 0.0f, 0.0f, 0.0f,

            1.0f, 1.0f, 0.0f, 0.0f, 0.0f, 1.0f,
            1.0f, 1.0f, 1.0f, 0.0f, 0.0f, 0.0f,
    };
    int vertexCount = 36;
}

void Chessboard::draw(glm::mat4 M) {
    this->coloredModel->draw(M);
}

Chessboard::Chessboard() {
    ShadersContainer *container = ProgramState::getInstance()->shadersContainer;
    this->coloredModel = new ColoredModel(container, ChessboardInternal::g_vertices, ChessboardInternal::g_colors,
                                          ChessboardInternal::g_normals, ChessboardInternal::vertexCount, GL_TRIANGLES);
}

